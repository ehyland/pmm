#!/bin/bash

set -euo pipefail

function clean_up {
  docker-compose down
}
trap clean_up EXIT

# export for use in docker-compose.yml
export NODE_TEST_VERSION="${NODE_TEST_VERSION:-16}"
export VERDACCIO_UID=`id -u`
export VERDACCIO_PORT="48733"

BUILD_WATCH="${BUILD_WATCH:-}"
EXTRA_JEST_ARGS=""

docker-compose build

docker-compose up -d registry

last_message=""
function say_once {
  message="$@"
  if [[ "$message" == "$last_message" ]]; then
    printf "."
  else
    last_message="$message"
    printf "\n$message"
  fi
}

if [[ -n "$BUILD_WATCH" ]]; then
  echo ""
  echo "⚠️  Make sure you run \"pnpm build:watch:release\" in another console"
  while true; do

    package_status=$(
      curl -s -o /dev/null -w "%{http_code}" http://localhost:48733/@ehyland/pmm/latest || true
    )

    if [[ "$package_status" == "000" ]]; then 
      say_once "waiting for registry to boot"
    elif [[ "$package_status" == "404" ]]; then
      say_once "waiting for package to be published"
    elif [[ "$package_status" == "200" ]]; then
      say_once "package found"
      break;
    else
      say_once "unexpected status $package_status"
    fi

    sleep 1
  done
  
  echo ""

  EXTRA_JEST_ARGS+=" --watchAll"
else
  docker-compose run --rm -it builder ./scripts/docker/builder-entrypoint
fi

docker-compose run --rm -it tester \
  pnpm jest \
    --runInBand \
    --verbose \
    --config ./jest.config.e2e.js $EXTRA_JEST_ARGS